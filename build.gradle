plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}


configurations {
	jaxb
}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
	implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
	implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
	implementation group: 'javax.xml.soap', name: 'javax.xml.soap-api', version: '1.3.5'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.0'
	implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.11.2'
	implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.11.0'
	implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-jaxb-annotations', version: '2.11.0'
	implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-parameter-names', version: '2.11.0'
	implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.11.0'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation group: 'org.json', name: 'json', version: '20210307'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
    testImplementation('org.springframework.boot:spring-boot-starter-test')	
    implementation("com.sun.xml.messaging.saaj:saaj-impl:1.4.0")
    
  	jaxb 'com.sun.xml.bind:jaxb-xjc:2.2.7-b41'
  	jaxb 'com.sun.xml.bind:jaxb-impl:2.2.7-b41'
  	jaxb 'javax.xml.bind:jaxb-api:2.2.7'
	jaxb "com.sun.xml.bind:jaxb-core:2.3.0"
	jaxb "javax.activation:activation:1.1"
	
	annotationProcessor(
		"org.springframework.boot:spring-boot-starter-data-jpa:2.3.0.RELEASE",
		"org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final",
		"javax.annotation:javax.annotation-api:1.3.2",
	)

}
tasks.named('test') {
	useJUnitPlatform()
}


task genJaxb {
    ext.sourcesDir = "$projectDir/src/main/java/br/com/example/demo/app/api"
    ext.classesDir = "$projectDir/src/main/java/br/com/example/demo/app/api"
    ext.schema = "src/main/resources/wsdl/SeloService40Teste.wsdl"

    outputs.dir classesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
            mkdir(dir: classesDir)

            xjc(destdir: sourcesDir, schema: schema,
                    package: "com.example.demo.app.api") {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }

            javac(destdir: classesDir, source: 1.8, target: 1.8, debug: true,
                    debugLevel: "lines,vars,source",
                    classpath: configurations.jaxb.asPath) {
                src(path: sourcesDir)
                include(name: "**/*.java")
                include(name: "*.java")
            }

            copy(todir: classesDir) {
                fileset(dir: sourcesDir, erroronmissingdir: false) {
                    exclude(name: "**/*.java")
                }
            }
        }
    }
}

